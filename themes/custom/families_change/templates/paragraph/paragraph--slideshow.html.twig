{#
/**
* @file
* Default theme implementation to display a paragraph.
*
* Available variables:
* - paragraph: Full paragraph entity.
* Only method names starting with "get", "has", or "is" and a few common
* methods such as "id", "label", and "bundle" are available. For example:
* - paragraph.getCreatedTime() will return the paragraph creation timestamp.
* - paragraph.id(): The paragraph ID.
* - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
* - paragraph.getOwnerId(): The user ID of the paragraph author.
* See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
* and methods for the paragraph object.
* - content: All paragraph items. Use {{ content }} to print them all,
* or print a subset such as {{ content.field_example }}. Use
* {{ content|without('field_example') }} to temporarily suppress the printing
* of a given child element.
* - attributes: HTML attributes for the containing element.
* The attributes.class element may contain one or more of the following
* classes:
* - paragraphs: The current template type (also known as a "theming hook").
* - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
* "Image" it would result in "paragraphs--type--image". Note that the machine
* name will often be in a short form of the human readable label.
* - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
* preview would result in: "paragraphs--view-mode--preview", and
* default: "paragraphs--view-mode--default".
* - view_mode: View mode; for example, "preview" or "full".
* - logged_in: Flag for authenticated user status. Will be true when the
* current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
* is an administrator.
*
* @see template_preprocess_paragraph()
*
* @ingroup themeable
*/
#}

{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
'paragraph-id--' ~ paragraph.id(),
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
not paragraph.isPublished() ? 'paragraph--unpublished',
paragraph.field_content_display.value
]
%}

{% set langcode = paragraph.langcode.value %}

<div class="slideshow-wrapper my-4">
    <div id="carouselExampleFade-{{paragraph.id()}}" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
            {% for item in paragraph.field_slide %}
                {% set translated_entity = item.entity.hasTranslation(langcode) ? item.entity.getTranslation(langcode) : item.entity %}
                <div class="carousel-item {% if loop.first %}active{% endif %}">
                {% if translated_entity.field_text_slideshow.value %}
                   <p class="text-slideshow">{{ translated_entity.field_text_slideshow.value|raw }}</p>
                {% endif %}
                {% if translated_entity.field_image.entity.uri.value %}
                  <div class="image-slideshow">
                    <img src="{{ file_url(translated_entity.field_image.entity.uri.value |image_style('image_slideshow_for_comics')) }}" class="img-fluid" loading="lazy">
                  </div>
                {% endif %}
                <div class="row">
                  {# {{ dump(paragraph.id()) }} #}
                        <div class="col-sm-5 image">
                            <img src="{{ file_url(translated_entity.field_upload_image.entity.uri.value) }}" class="img-fluid" loading="lazy">
                        </div>
                        <div class="col-sm-7 content">
                            <div class="title">
                                <h2>{{ translated_entity.field_heading.value }}</h2>
                            </div>
                            <p>{{ translated_entity.field_descriptions.value|raw }}</p>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleFade-{{paragraph.id()}}" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleFade-{{paragraph.id()}}" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>