{#
/**
* @file
* Default theme implementation to display a paragraph.
*
* Available variables:
* - paragraph: Full paragraph entity.
* Only method names starting with "get", "has", or "is" and a few common
* methods such as "id", "label", and "bundle" are available. For example:
* - paragraph.getCreatedTime() will return the paragraph creation timestamp.
* - paragraph.id(): The paragraph ID.
* - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
* - paragraph.getOwnerId(): The user ID of the paragraph author.
* See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
* and methods for the paragraph object.
* - content: All paragraph items. Use {{ content }} to print them all,
* or print a subset such as {{ content.field_example }}. Use
* {{ content|without('field_example') }} to temporarily suppress the printing
* of a given child element.
* - attributes: HTML attributes for the containing element.
* The attributes.class element may contain one or more of the following
* classes:
* - paragraphs: The current template type (also known as a "theming hook").
* - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
* "Image" it would result in "paragraphs--type--image". Note that the machine
* name will often be in a short form of the human readable label.
* - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
* preview would result in: "paragraphs--view-mode--preview", and
* default: "paragraphs--view-mode--default".
* - view_mode: View mode; for example, "preview" or "full".
* - logged_in: Flag for authenticated user status. Will be true when the
* current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
* is an administrator.
*
* @see template_preprocess_paragraph()
*
* @ingroup themeable
*/
#}

{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
'paragraph-id--' ~ paragraph.id(),
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
not paragraph.isPublished() ? 'paragraph--unpublished',
paragraph.field_content_display.value
]
%}

{% set video_type_selection = paragraph.field_select_list_of_video_type.value %}


{% if video_type_selection == 'multiple_video' %}
    {# ------------------multiple video--------------  #}
    {% if content.field_multiple_video_and_title %}
        <div class="custom-grid-video-listing">             
            {% for item in paragraph.field_multiple_video_and_title %}
                {% if item.entity.field_multiple_video_title.value is not empty %}
                        {% set loop_no = loop.index -1 %}
                        {# {{ item.entity.field_multiple_video_title.value|raw }} #}
                        {{ content.field_multiple_video_and_title[loop_no] }}
                {% endif %}
            {% endfor %} 
        </div>  
    {% endif %}
    {# ------------------ /multiple video--------------  #}
{% else %}
    {# ------------------ Grid multiple video--------------  #}
    <div class="multiple-grid-video-wrapper">

        {% set id = paragraph.field_multiple_grid_heading.value|replace({' ': '_', '-': '_'}) %}
        {# ----------------------------------------------  #}
        <div class="accordion" id="text-accordian-{{ id }}">  
                <div class="accordion-item">
                    <h2 class="accordion-header" id="{{ id }}">
                        <button class="accordion-button " type="button" data-bs-toggle="collapse" data-bs-target="#collapse{{ id }}" aria-expanded="false" aria-controls="collapse{{ id }}">
                        {{ paragraph.field_multiple_grid_heading.value|raw }}
                        </button>
                    </h2>
                    <div id="collapse{{ id }}" class="accordion-collapse collapse show" aria-labelledby="{{ id }}" data-bs-parent="#text-accordian-{{ id }}">
                        <div class="accordion-body">                    

                        <div class="tab-content" id="pills-tabContent">
                        {% for item in paragraph.field_multiple_video_and_title %}
                            {% if item.entity.field_multiple_video_title.value is not empty %}
                                {% set loop_no = loop.index - 1 %} 
                                {% if loop_no =='0' %}
                                    <div class="tab-pane fade show active" id="pills-profile-{{ loop_no }}" role="tabpanel" aria-labelledby="pills-profile-tab-{{ loop_no }}">
                                    {{ content.field_multiple_video_and_title[loop_no] }}
            
                                    {# ---------------To get video url  #}
                                    {# {{ item.entity.field_multiple_video.entity.uri.value }} #}
                                    
                                    </div>
                                {% else %}                     
                                    <div class="tab-pane fade " id="pills-profile-{{ loop_no }}" role="tabpanel" aria-labelledby="pills-profile-tab-{{ loop_no }}">
                                        {{ content.field_multiple_video_and_title[loop_no] }}                            
                                    </div>
                                {% endif %}
            
                            {% endif %}
                        {% endfor %} 
                    </div>
        
                    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                        {% for item in paragraph.field_multiple_video_and_title %}
                            {% if item.entity.field_multiple_video_title.value is not empty %}
                                {% set loop_no = loop.index - 1 %}   
                                {% if loop_no =='0' %}             
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link playVideoBtn active" id="pills-profile-tab-{{ loop_no }}" data-bs-toggle="pill" data-bs-target="#pills-profile-{{ loop_no }}" type="button" role="tab" aria-controls="pills-profile-{{ loop_no }}" aria-selected="false">
                                        <img src="{{ file_url(item.entity.field_thumbnail_image.entity.uri.value) }}" alt="{{ item.entity.field_thumbnail_image.alt }}" title="{{ item.entity.field_thumbnail_image.title }}" width="310" height="170"/>
                                    </button>
                                    </li>
                                {% else %}
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link playVideoBtn" id="pills-profile-tab-{{ loop_no }}" data-bs-toggle="pill" data-bs-target="#pills-profile-{{ loop_no }}" type="button" role="tab" aria-controls="pills-profile-{{ loop_no }}" aria-selected="false">
                                        <img src="{{ file_url(item.entity.field_thumbnail_image.entity.uri.value) }}" alt="{{ item.entity.field_thumbnail_image.alt }}" title="{{ item.entity.field_thumbnail_image.title }}" width="310" height="170"/>
                                    </button>
                                    </li>
                                {% endif %}
            
                            {% endif %}
                        {% endfor %} 
                    </ul>        
                </div>
                </div>

                    </div>
                </div>
            </div>
        {# ----------------------------------------------  #}
         
        
    {# ------------------ /Grid multiple video--------------  #}
{% endif %}







